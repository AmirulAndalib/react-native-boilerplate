<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>The React Native Boilerplate Blog</title>
        <link>https://thecodingmachine.github.io/react-native-boilerplate/blog</link>
        <description>The React Native Boilerplate Blog</description>
        <lastBuildDate>Sun, 19 Apr 2020 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[React Native Boilerplate 3.0.0]]></title>
            <link>https://thecodingmachine.github.io/react-native-boilerplate/blog/2020/04/19/React-Native-Boilerplate-3.0.0</link>
            <guid>/2020/04/19/React-Native-Boilerplate-3.0.0</guid>
            <pubDate>Sun, 19 Apr 2020 00:00:00 GMT</pubDate>
            <description><![CDATA[What's in the box? 📦]]></description>
            <content:encoded><![CDATA[<p>Welcome aboard! 🛥️</p><p>As we have active users that uses this boilerplate, we will try to improve communication about updates
we're releasing. It's important for us to give you new reasons to try this boilerplate out!
We would love to have new ideas to make it even more convenient!</p><p>To do so, we will post a changelog every major updates. Unlike the changelog in the releases tab, we
will here provide more details and maybe some examples. </p><p>In this first post, we will present the current state of this boilerplate.</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="light--simple--and-scalable-">Light 🪶 Simple 👌 and Scalable 📏<a class="hash-link" href="#light--simple--and-scalable-" title="Direct link to heading">​</a></h2><p>This boilerplate is the core of every react-native applications we develop at <a href="https://www.thecodingmachine.com/" target="_blank" rel="noopener noreferrer">TheCodingMachine</a>.
This means that we are the first users! If an issue appear we are the first affected 🥺, that's why this project is actively maintained!</p><p>The main idea behind this boilerplate is to have just the necessary and well-known stuff to have a very
"<em>easy to use</em>" boilerplate for little and big real world apps.</p><p>We don't include components libraries, we don't depend on third-party libraries (like Firebase for example).
It's just a good template project that is build on top of all the accumulated experience of our mobile teams.
It also provides a solid architecture that facilitates separation of concerns between the UI, the state management
and the business logic.
Like that, everyone can add its own touch! 🖌️</p><p>🚨 Every decision about the technical stack are made regarding our preferences (every library has his
pros and cons).</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="easy-to-install-">Easy to install 😎<a class="hash-link" href="#easy-to-install-" title="Direct link to heading">​</a></h2><p>Installation has been facilitated since the v2.0.0, thanks to the use of the react-native-cli and
<a href="https://github.com/react-native-community/cli/blob/master/docs/init.md#creating-custom-template" target="_blank" rel="noopener noreferrer">custom template</a>.
To run this boilerplate, the only commands you need are</p><div class="codeBlockContainer_MPoW theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-text codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#393A34"><span class="token plain">npx react-native init --template @thecodingmachine/react-native-boilerplate</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">yarn start</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">yarn ios</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">yarn android</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>That's this simple! 🚀</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="typescript-support-">Typescript support 💙<a class="hash-link" href="#typescript-support-" title="Direct link to heading">​</a></h2><p>Since the v3.0.0, during the installation, you can choose to use typescript for your new app.
All the boilerplate will then be translated in typescript.</p><p><img loading="lazy" alt="Typescript init" src="/react-native-boilerplate/assets/images/typescript-036b964a898d93c71b69e7d151a696c2.png" width="1132" height="852" class="img_E7b_"></p><p>That's this simple! 🚀</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="solid-libraries-">Solid libraries 🔨<a class="hash-link" href="#solid-libraries-" title="Direct link to heading">​</a></h2><p>As I said before, main concerns are simplicity and scalability.
Each of the used libraries are well-known, tried and tested. </p><h3 class="anchor anchorWithStickyNavbar_mojV" id="well-know-libraries">Well-know libraries<a class="hash-link" href="#well-know-libraries" title="Direct link to heading">​</a></h3><p>For the state management we use <a href="https://redux.js.org/" target="_blank" rel="noopener noreferrer"><strong>Redux</strong></a> (redux + redux toolkit + redux persist).
Some people like it, some people don't.
We are really comfortable with this library, it's not so difficult to learn, and the implementation is well-known,
recognized as a good choice and easy <a href="/react-native-boilerplate/docs/UsingFlipper">to debug</a>!
Thanks to this boilerplate and <a href="https://redux-toolkit.js.org/" target="_blank" rel="noopener noreferrer">redux-toolkit</a>, the state management is ready out of the box.
A complete example is even included. This way, you can easier understand how it works.
To deal with the navigation, <a href="https://reactnavigation.org/" target="_blank" rel="noopener noreferrer"><strong>React Navigation</strong></a> is THE reference for screen navigation.
For the internationalization we use <a href="https://www.i18next.com/" target="_blank" rel="noopener noreferrer"><strong>I18next</strong></a>. Well-know library, really easy to use and
providing nice hooks.</p><h3 class="anchor anchorWithStickyNavbar_mojV" id="redux-toolkit-wrapper">redux-toolkit-wrapper<a class="hash-link" href="#redux-toolkit-wrapper" title="Direct link to heading">​</a></h3><p>This project is a Redux-toolkit wrapper (yes... it's obvious 😅) used to write less code regarding classic CRUD operations.
Redux-toolkit provide a lot of abstraction for async operations, but we always have to create a <code>loading</code> and <code>error</code>
state and associated reducers.
Redux-toolkit-wrapper abstract these async operations. For a classic <em>"fetch one user"</em> operation all you need is adding these files :</p><div class="language-javascript codeBlockContainer_MPoW theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_YYkX">src/Store/User/FetchOne.js</div><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-javascript codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"></span><br></span><span class="token-line" style="color:#393A34"><span class="token imports">  buildAsyncState</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> buildAsyncReducers</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> buildAsyncActions</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"></span><br></span><span class="token-line" style="color:#393A34"><span class="token imports"></span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@thecodingmachine/redux-toolkit-wrapper'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports">fetchOneUserService</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@/Services/User/FetchOne'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">default</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">initialState</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">buildAsyncState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'fetchOne'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">action</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">buildAsyncActions</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'user/fetchOne'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> fetchOneUserService</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">reducers</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">buildAsyncReducers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">errorKey</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'fetchOne.error'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">loadingKey</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'fetchOne.loading'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="language-javascript codeBlockContainer_MPoW theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_YYkX">src/Store/User/index.js</div><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-javascript codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> sliceInitialState </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">item</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">default</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">buildSlice</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'user'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token maybe-class-name">FetchOne</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> sliceInitialState</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">reducer</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Next, you can use your state in your container like this:</p><div class="language-javascript codeBlockContainer_MPoW theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_B9tL"><pre tabindex="0" class="prism-code language-javascript codeBlock__0OG thin-scrollbar"><code class="codeBlockLines_gEuF"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">React</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> useEffect </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'react'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> useDispatch</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> useSelector </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'react-redux'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">View</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">ActivityIndicator</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">Text</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'react-native'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">FetchOne</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@/Store/User/FetchOne'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function maybe-class-name" style="color:#d73a49">ExampleContainer</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> dispatch </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">useDispatch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> user </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">useSelector</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">state</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> state</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">user</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">item</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> fetchOneUserLoading </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">useSelector</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">state</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> state</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">user</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">fetchOne</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">loading</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> fetchOneUserError </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">useSelector</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">state</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> state</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">user</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">fetchOne</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">useEffect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">dispatch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token maybe-class-name">FetchOne</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">action</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">id</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">dispatch</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">View</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">fetchOneUserLoading </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">ActivityIndicator</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">fetchOneUserError </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">Text</span><span class="token plain"> style</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token maybe-class-name">Fonts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">textRegular</span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">fetchOneUserError</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">message</span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token maybe-class-name">Text</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">Text</span><span class="token plain"> style</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token maybe-class-name">Fonts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">textRegular</span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">{</span><span class="token function" style="color:#d73a49">t</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'example.helloUser'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> user</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">name</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token maybe-class-name">Text</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token maybe-class-name">View</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">default</span><span class="token plain"> </span><span class="token maybe-class-name">ExampleContainer</span><br></span></code></pre><div class="buttonGroup_hRr1"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_W9eQ" aria-hidden="true"><svg class="copyButtonIcon_XEyF" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_i9w9" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>That's this simple! 🚀</p><div class="admonition admonition-info alert alert--info"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</h5></div><div class="admonition-content"><p>For more details about redux-toolkit-wrapper jump <a href="/react-native-boilerplate/docs/ReduxStore"><strong>here</strong></a></p></div></div><h2 class="anchor anchorWithStickyNavbar_mojV" id="whats-in-the-box-">What's in the box? 📦<a class="hash-link" href="#whats-in-the-box-" title="Direct link to heading">​</a></h2><p>Still hesitating ? Let's make a recap and see what this beautiful boilerplate can provide you:</p><ul><li>No headaches! 🤒 Thanks to the <strong>quick and easy install</strong>, the
<strong>documentation</strong> and of course the <strong>included example</strong>! (if you have all the installed
<a href="https://facebook.github.io/react-native/docs/getting-started.html#installing-dependencies" target="_blank" rel="noopener noreferrer">requirements</a>
of course)</li><li><strong>Typescript</strong> 💙 / <strong>Javascript</strong> 💛 ? Your project, your choice!</li><li>Never again sailing on troubled waters with <strong>React Navigation</strong>: THE powerful library to handle navigation 📱</li><li><strong>Redux</strong> (with redux-toolkit and redux-toolkit-wrapper 😉) : handling
redux store has never been as easy as this!! ⚡</li><li>DarkMode or colorful app? Give your users the power to choose!
<strong>Multi-theming</strong> and <strong>darkMode</strong> support 🌗 (see <a href="/react-native-boilerplate/docs/ThemesAndDarkMode">here</a>)</li><li>French kisses aren't translatable, but you can translate your app! <strong>i18n friendly</strong> 🌐 (see <a href="/react-native-boilerplate/docs/AddALangTranslation">here</a>)</li><li>You don't like bug hunt? Use <strong>Flipper debugging</strong> 🐛 (see <a href="/react-native-boilerplate/docs/UsingFlipper">here</a>)</li><li>Maintained by <strong>passionate developers</strong> ⚛️</li></ul><p>Just Test It 🧪 !!</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="installation-plugins-️">Installation plugins ⚙️<a class="hash-link" href="#installation-plugins-️" title="Direct link to heading">​</a></h2><p>Freshly in the v3.0.0 we created an installation plugin system. Of course, the first plugin added is the typescript one. 😉
We are now able to add local or npm plugins to our boilerplate in order to apply them during the installation.
This way, we get the app template with the features we asked for.
In other words, no unwelcome pieces of code will lay in your app architecture anymore.</p><p>You got it, it's only the beginning thinking about the many plugins we could create for this project. 🤩
So wait and see what could be the next plugins...🕓🤐</p><h2 class="anchor anchorWithStickyNavbar_mojV" id="why-this-boilerplate-">Why this boilerplate? 🐙<a class="hash-link" href="#why-this-boilerplate-" title="Direct link to heading">​</a></h2><p>Before starting this project, we looked for already existing boilerplates.
We've found some, but while many were (and are always) awesome, we did not find what we were
looking for: a <strong>light, scalable, and flexible boilerplate with a great separation of concerns</strong>.</p><p>One of the most popular was
<a href="https://github.com/mcnamee/react-native-starter-kit" target="_blank" rel="noopener noreferrer">Matt Mcnamee's React Native Starter Kit</a>,
which unfortunately missed Redux middleware and React Navigation.</p><p>Digging deeper in the react-native boilerplates (ignoring unmaintained projects),
many popular boilerplates were too opinionated: they
included 3rd party services or very strong architecture choices
that we were not comfortable with.
To name a few:</p><ul><li><a href="https://github.com/bartonhammond/snowflake" target="_blank" rel="noopener noreferrer">Snowflake</a> ran with a Hapi Server running on Redhat OpenShift,</li><li><a href="https://github.com/sysgears/apollo-universal-starter-kit" target="_blank" rel="noopener noreferrer">Apollo's StarterKit</a> is based on GraphQL using Apollo,</li><li><a href="https://github.com/spencercarli/react-native-meteor-boilerplate" target="_blank" rel="noopener noreferrer">Meteor Boilerplate</a> is based on Meteor.</li></ul><p>Finally, some did not contain the architecture we were looking for (the separation of concerns),
for example <a href="https://github.com/react-everywhere/re-start" target="_blank" rel="noopener noreferrer">re-start</a>.</p><p>One interesting exception was
<a href="https://github.com/infinitered/ignite-andross" target="_blank" rel="noopener noreferrer">Ignite IR Boilerplate "Andross"</a>, but after
consideration we decided not to use it because of the large amount of
unnecessary code/components it provided out of the box.</p><p>In 2021, some react-native boilerplates have changed. Let's see what are
the differences:</p><table><thead><tr><th align="left">Boilerplate</th><th align="left">Difference from our</th></tr></thead><tbody><tr><td align="left">mcnamee/react-native-starter-kit</td><td align="left"><ul><li>No React Navigation (react-native-router-flux instead),</li><li>No Typescript support,</li><li>Don't use the react-native-cli to init</li></ul></td></tr><tr><td align="left">bartonhammond/snowflake</td><td align="left">Seems not maintained anymore (last release was in 2017) 💤</td></tr><tr><td align="left">sysgears/apollo-universal-starter-kit</td><td align="left"><ul><li>Is based on GraphQL using Apollo,</li><li>Don't use the react-native-cli to init</li></ul></td></tr><tr><td align="left">spencercarli/react-native-meteor-boilerplate</td><td align="left">Seems not maintained (no release, last commit was in 2018) 💤</td></tr><tr><td align="left">react-everywhere/re-start</td><td align="left">Seems not maintained (last release was in 2017) 💤</td></tr><tr><td align="left">infinitered/ignite</td><td align="left"><ul><li>Specific folders for ignite-cli and boilerplate items,</li><li>MobX instead of Redux,</li><li>Expo ready,</li><li>Reactotron (ignite product) ready,</li><li>Typescript only</li></ul></td></tr></tbody></table><p>So there is no reason to hesitate : come 🧲, test 🧪 and leave a star ⭐</p><p>Thanks for reading, See you for the next release. 🏷️</p>]]></content:encoded>
            <category>boilerplate</category>
            <category>starter-kit</category>
            <category>starter</category>
            <category>kit</category>
            <category>react</category>
            <category>native</category>
            <category>react-native</category>
            <category>javascript</category>
            <category>typescript</category>
        </item>
    </channel>
</rss>